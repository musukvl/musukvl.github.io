@using System.Collections
@using Amba.ULogin.Services
@using FluentNHibernate.Conventions
@using Orchard.Comments.Models
@using Orchard.ContentManagement
@using Orchard.Security
@using System.Linq;

@{
    CommentPart comment = Model.ContentPart;
    var comments = comment.CommentedOnContentItem.As<CommentsPart>();
    var subcomments = Model.Items as List<object>;
    var children = New.List(Items: Model.Items);
    children.Classes.Add("comments");
    var photo = WorkContext.Resolve<IUserToolsService>().GetUserPic(comment.Author, "/Media/Default/anonymous.png");
    var userPrettyName = WorkContext.Resolve<IUserToolsService>().GetUserPrettyName(comment.Author);
}
<article id="comments-@comment.Id" class="comment-item">
    <header>
        <div class="comment-header">
            <div class="photo-column">
                <img src="@photo" alt="" width="50" height="50"/>
            </div>
            <div class="details-column">
                <div class="who">@userPrettyName</div>
                <div class="when">@comment.CommentDateUtc.GetValueOrDefault().ToString("yyyy.MM.dd hh:mm")</div> 
            </div>
        </div>        
    </header> 
    <p class="text">@(new MvcHtmlString(Html.Encode(comment.Record.CommentText).Replace("\r\n", "<br />\r\n")))</p>
    
    @if (comments.ThreadedComments)
    {
        <div class="reply">
            <a class="comment-reply-button" href="#" id="reply-button-@comment.Id">@T("Ответить")</a>
        </div>
        <div class="reply-form-box" id="reply-form-box-@comment.Id" data-comment-id="@comment.Id" style="display: none;">
            @if (WorkContext.CurrentUser == null)
            {
                <div class="social-login-form">
                    <div class="welcome-message">@T("Пожалуйста, представьтесь, чтобы оставить комментарий")</div>
                    <div class="ulogin-widget" id="ulogin-@comment.Id" data-uloginid="eafa0f0a" data-ulogin="display=small;fields =first_name,last_name;optional =sex,photo,email,phone,nickname,bdate,photo_big,city,country;providers =facebook,twitter,linkedin,vkontakte,googleplus,google,yandex;hidden =other;redirect_uri =;callback =uloginCallback"></div>
                </div>
            }
        </div>
    }

    @if (subcomments != null && subcomments.Any())
    {
        <div class="subposts">
            @foreach (var subpost in children)
            {
                @Display(subpost)
            }
        </div>
    }
       
    
    
</article>


